@using Microsoft.AspNetCore.Identity
@using VZTest.Models.Test
@inject SignInManager<IdentityUser> signInManager
@model AttemptModel
@{
    ViewData["Title"] = "Прохождение теста";
}

@if (!signInManager.IsSignedIn(User))
{
    <partial name="Errors/_AuthorisePartial" />
    return;
}

@if (Model == null)
{
    <partial name="Errors/_ErrorPartial" />
    return;
}

@if (Model.Forbidden)
{
    <partial name="Errors/_ForbiddenPartial" />
    return;
}

@if (Model.NotFound)
{
    <partial name="Errors/_NotFoundPartial" />
    return;
}

<h1 class="text-center">@Model.Test.Title</h1>
<hr>
<form method="post">
    @for (int i = 0; i < Model.Test.Questions.Count; i++)
    {
        Question question = Model.Test.Questions[i];
        <h3 class="mt-2">
            Вопрос #@(i + 1)
            <span class="text-muted">(@question.Balls @WordHelp.Inflect((int)question.Balls, "баллов", "балл", "балл"))</span>
        </h3>
        <h6>
            <span class="text-muted">Задание: </span>
            @question.Title
        </h6>
        @if (question.ImageUrl != null)
        {
            <img class="img-fluid rounded" src="@question.ImageUrl">
        }
        @switch (question.Type)
        {
            case QuestionType.Text:
                @Html.TextAreaFor(m => m.Attempt.Answers[i].TextAnswer, new {style = "width: 100%;", @class = "form-control"})
                <a class="btn btn-primary mt-2" name="save-button" onclick="OnSaveClick(@Model.Attempt.Id,@question.Id,GetInputValue('Attempt_Answers_' + @i + '__TextAnswer'))"><i class="bi bi-save"></i> Сохранить</a>
                break;
            case QuestionType.Date:
                <input asp-for="Attempt.Answers[i].DateAnswer" type="date" class="form-control" />
                <a class="btn btn-primary mt-2" name="save-button" onclick="OnSaveClick(@Model.Attempt.Id,@question.Id,GetInputValue('Attempt_Answers_' + @i + '__DateAnswer'))"><i class="bi bi-save"></i> Сохранить</a>
                break;
            case QuestionType.Int:
                <input asp-for="Attempt.Answers[i].IntAnswer" type="text" class="form-control" oninput="OnIntInput(event);" />
                <a class="btn btn-primary mt-2" name="save-button" onclick="OnSaveClick(@Model.Attempt.Id,@question.Id,GetInputValue('Attempt_Answers_' + @i + '__IntAnswer'))"><i class="bi bi-save"></i> Сохранить</a>
                break;
            case QuestionType.Double:
                <input asp-for="Attempt.Answers[i].DoubleAnswer" class="form-control" oninput="OnDoubleInput(event);" />
                <a class="btn btn-primary mt-2" name="save-button" onclick="OnSaveClick(@Model.Attempt.Id,@question.Id,GetInputValue('Attempt_Answers_' + @i + '__DoubleAnswer'))"><i class="bi bi-save"></i> Сохранить</a>
                break;
            case QuestionType.Radio:
                foreach (Option option in question.Options)
                {
                    <div class="form-check">
                        @if (Model.Attempt.Answers[i].RadioAnswer == option.Id)
                        {
                            <input name="Attempt.Answers[@i].RadioAnswer" class="form-check-input" type="radio" value="@option.Id" checked>
                        }
                        else
                        {
                            <input name="Attempt.Answers[@i].RadioAnswer" class="form-check-input" type="radio" value="@option.Id">
                        }
                        <label class="form-check-label">@option.Title</label>
                    </div>
                }
                <a class="btn btn-primary mt-2" name="save-button" onclick="OnSaveClick(@Model.Attempt.Id,@question.Id,GetRadioValue('Attempt.Answers[' + @i + '].RadioAnswer'))"><i class="bi bi-save"></i> Сохранить</a>
                break;
            case QuestionType.Check:
                @foreach (Option option in question.Options)
                {
                    <div class="form-check">
                        @if (Model.Attempt.Answers[i].CheckAnswers.Contains(option.Id))
                        {
                            <input name="Attempt.Answers[@i].CheckAnswers" class="form-check-input" type="checkbox" value="@option.Id" checked>
                        }
                        else
                        {
                            <input name="Attempt.Answers[@i].CheckAnswers" class="form-check-input" type="checkbox" value="@option.Id">
                        }
                        <label class="form-check-label">@option.Title</label>
                    </div>
                }
                <a class="btn btn-primary mt-2" name="save-button" onclick="OnSaveClick(@Model.Attempt.Id,@question.Id,GetCheckValue('Attempt.Answers[@i].CheckAnswers'))"><i class="bi bi-save"></i> Сохранить</a>
                break;
        }
    }
    <div class="container mt-3">
        <div class="text-end">
            <a id="save-all-button" class="btn btn-primary" onclick="SaveAll();"><i class="bi bi-save"></i> Сохранить все</a>
            <button id="main-button" type="submit" class="btn btn-outline-primary" onclick="AskEnd(event);"><i class="bi bi-send-fill"></i> Завершить</button>
        </div>
    </div>
</form>

@section Scripts
{
    @if (Model.Test.Questions.Any(x => x.Type == QuestionType.Int || x.Type == QuestionType.Double))
    {
        <script src="~/js/InputLimits.js"></script>
    }
    <partial name="_SweetAlertsPartial" />
    <partial name="_AjaxPartial" />
    <script src="~/js/SaveScript.js" asp-append-version="true"></script>
    <script src="~/js/InputScripts.js" asp-append-version="true"></script>
    <script src="~/js/AttemptSaveScript.js" asp-append-version="true"></script>
}