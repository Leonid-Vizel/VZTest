@using Microsoft.AspNetCore.Identity
@using VZTest.Models.Test
@inject SignInManager<IdentityUser> signInManager
@model IEnumerable<TestStatistics>
@{
    ViewData["Title"] = "Ваши тесты";
}

<partial name = "_AjaxPartial"></partial>
<partial name = "_SweetAlertsPartial"></partial>

<script>
    function ProcessErrors(error)
    {
        switch (error.status) {
                case 403:
                    swal("Не доступно!", "Пользователь не может отметить свой же тест!", "error");
                    break;
                case 404:
                    swal("Элемент не найден!", "Перезагрузите страницу и попробуйте снова.", "error");
                    break;
                case 401:
                    swal("Авторизуйтесь!", "Для того, чтобы отметить тест надо войти в аккаунт.", "error");
                    break;
                default:
                    swal("Неизвестная ошибка " + error.status, "Обратитесь к службу поддержки.", "error");
                    break;
            }
    }

    function SetClipboard(content)
    {
        navigator.clipboard.writeText(content);
        document.getElementById('copyIcon').setAttribute('class','bi bi-check2');
        var interval = setInterval(function(){SetIconBack()},2500);
    }

    function SetIconBack()
    {
        document.getElementById('copyIcon').setAttribute('class','bi bi-clipboard-check');
    }

    function OpenToggle(id)
    {
        var verificationValue = document.getElementsByName('__RequestVerificationToken')[0].getAttribute('value');
        var open = document.getElementById("Open-"+id) == null;
        if (open)
        {
            swal({
            title: "Вы действительно хотите закрыть этот тест?",
            text: "Прохождение этого теста другими пользователями будет невозможно, однако сам тест удалён не будет!",
            icon: "warning",
            buttons: ["Отмена", "Закрыть"]
            })
            .then((willDelete) => {
            if (willDelete)
            {
                $.ajax({
                type: "POST",
                url: "/Test/OpenToggle/",
                data: {id: id, opened: open, __RequestVerificationToken: verificationValue },
                error: function(error)
                {
                    ProcessErrors(error);
                },
                success: function()
                {
                    var element = document.getElementById("Close-"+id);
                    element.setAttribute('class', 'btn btn-outline-success');
                    element.innerHTML = "<i class=\"bi bi-door-open\"></i> Открыть";
                    element.setAttribute('id', "Open-"+id);
                }
                });
            }
        });
        }
        else
        {
            swal({
            title: "Вы действительно хотите открыть этот тест?",
            text: "После открытия другие пользователи смогут проходить Ваш тест!",
            icon: "warning",
            buttons: ["Отмена", "Открыть"]
            })
            .then((willDelete) => {
            if (willDelete)
            {
                $.ajax({
                type: "POST",
                url: "/Test/OpenToggle/",
                data: {id: id, opened: open, __RequestVerificationToken: verificationValue },
                error: function(error)
                {
                    ProcessErrors(error);
                },
                success: function()
                {
                    var element = document.getElementById("Open-"+id);
                    element.setAttribute('class', 'btn btn-outline-warning');
                    element.innerHTML = "<i class=\"bi bi-door-closed\"></i> Закрыть";
                    element.setAttribute('id', "Close-"+id);
                }
                });
            }
        });
        }
    }

    function Delete(deleteId)
    {
        var verificationValue = document.getElementsByName('__RequestVerificationToken')[0].getAttribute('value');
        swal({
        title: "Вы действительно хотите удалить этот тест?",
        text: "После удаления теста воостановить его будет невозможно!",
        icon: "warning",
        buttons: ["Отмена", "Удалить"],
        dangerMode : true
        })
        .then((willDelete) => {
            if (willDelete)
            {
                $.ajax({
                type: "POST",
                url: "/Test/Delete/",
                data: {id: deleteId, __RequestVerificationToken: verificationValue },
                error: function(error)
                {
                    ProcessErrors(error);
                },
                success: function()
                {
                    var element = document.getElementById("test-container-" + deleteId);
                    element.remove();
                    element = document.getElementById("test-separator-" + deleteId);
                    element.remove();
                    var testContainersCount = document.getElementsByName("test-container").length;
                    if (testContainersCount == 0)
                    {
                        element = document.getElementById('top-separator');
                        if (element != null)
                        {
                            var h5 = document.createElement('h5');
                            h5.innerHTML = 'Вы пока не создали ни одного теста.';
                            element.insertAdjacentElement('afterend', h5);
                        }
                    }
                }
                });
            }
        });
    }
</script>

<h2><i class="bi bi-list-stars"></i> @ViewData["Title"]</h2>
<hr id="top-separator">

@if (!signInManager.IsSignedIn(User))
{
    <h5>Войдите в свой аккаунт</h5>
    return;
}

@if (Model != null && Model.Count() > 0)
{
    @foreach (TestStatistics test in Model)
    {
        <div class="container" id="test-container-@test.Test.Id" name="test-container">
            <h5><a class="link" asp-controller="Test" asp-action="Preview" asp-route-Id="@test.Test.Id">@test.Test.Title</a></h5>
            <div class="row col-15">
                <div class="col-3">
                    <h6>Номер: #@test.Test.Id <a class="btn btn-outline-primary btn-sm" onclick="SetClipboard(@test.Test.Id)"><i id="copyIcon" class="bi bi-clipboard-check"></i></a></h6>
                </div>
                <div class="col-3">
                    <h6>Создано: @test.Test.CreatedTime.ToString("dd.MM.yyyy")</h6>
                </div>
                <div class="col-3">
                    <h6>Вопросов: @test.QuestionCount</h6>
                </div>
                <div class="col-3">
                    <h6>Пройдено: @test.AttemptsCount @WordHelp.Inflect(test.AttemptsCount,"раз","раз","раза")</h6>
                </div>
                <div class="col-3">
                    <h6>Звезды: @test.StarsCount</h6>
                </div>
            </div>
            <div class="text-end">
                <form>
                    <button class="btn btn-outline-success" type="submit"><i class="bi bi-file-earmark-text"></i> Результаты</button> @*Доработать*@
                    <a class="btn btn-outline-warning" asp-controller="Test" asp-action="Edit" asp-route-Id="@test.Test.Id"><i class="bi bi-pencil"></i> Редактировать</a>
                    @if (test.Test.Opened)
                    {
                        <a id="Close-@test.Test.Id" class="btn btn-outline-warning" onclick="OpenToggle(@test.Test.Id);"><i class="bi bi-door-closed"></i> Закрыть</a>
                    }
                    else
                    {
                        <a id="Open-@test.Test.Id" class="btn btn-outline-success" onclick="OpenToggle(@test.Test.Id);"><i class="bi bi-door-open"></i> Открыть</a>
                    }
                    <a class="btn btn-outline-danger" onclick="Delete(@test.Test.Id);"><i class="bi bi-trash"></i> Удалить</a>
                </form>
            </div>
        </div>
        <hr id="test-separator-@test.Test.Id">
    }
}
else
{
    <h5>Вы пока не создали ни одного теста.</h5>
}