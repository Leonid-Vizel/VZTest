@using Microsoft.AspNetCore.Identity
@using VZTest.Models.Test
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager
@model TestPriviewModel
@{
    ViewData["Title"] = "Предпросмотр теста";
}

@if (!signInManager.IsSignedIn(User))
{
    <partial name="Errors/_AuthorisePartial" />
    return;
}
@if (Model == null)
{
    <partial name="Errors/_ErrorPartial" />
    return;
}
@if (Model.Forbidden)
{
    <partial name="Errors/_ForbiddenPartial" />
    return;
}
@if (Model.Closed)
{
    <partial name="Errors/_TestClosedPartial" />
    return;
}
@if (Model.Test.StartTime != null && Model.BeforeStart)
{
    <partial name="Errors/_BeforeTimePartial" model="new Tuple<DateTime,int>(Model.Test.StartTime.Value,Model.Test.Id)" />
    return;
}
@if (Model.AfterEnd)
{
    <partial name="Errors/_AfterTimePartial" model="@Model.Test.EndTime" />
    return;
}
@if (Model.NotFound)
{
    <partial name="Errors/_NotFoundPartial" />
    return;
}

<link rel="stylesheet" href="~/css/PercentCircle.css">
<link rel="stylesheet" href="~/css/CenterFlex.css">

<style>
    h2 {
        display: inline-block;
        float: left;
    }
</style>

<h2><i class="bi bi-list-check"></i> Информация об опросе #@Model.Test.Id</h2>
<div class="pull-left">
    @if (Model.Liked)
    {
        <a id="unstar-toggle-@Model.Test.Id" class="btn btn-outline-success mx-3" onclick="StarToggle(@Model.Test.Id);"><small>@Model.StarsCount <i class="bi bi-star-fill"></i></small></a>
    }
    else
    {
        <a id="star-toggle-@Model.Test.Id" class="btn btn-outline-success mx-3" onclick="StarToggle(@Model.Test.Id);"><small>@Model.StarsCount <i class="bi bi-star"></i></small></a>
    }
</div>
<hr>
<span style="white-space: pre-line">
    Название: <b>@Model.Test.Title</b>
    @if (Model.Test.Description != null)
    {
        @:Описание: <b>@Model.Test.Description</b>
    }
    Дата создания: <b>@Model.Test.CreatedTime</b>
    @if (Model.Test.EditedTime != null)
    {
        @:Дата последнего изменения: <b>@Model.Test.EditedTime</b>
    }
    @if (Model.Test.StartTime != null)
    {
        @:Тест открывается в: <b>@Model.Test.StartTime</b>
    }
    @if (Model.Test.EndTime != null)
    {
        @:Тест закрывается в: <b>@Model.Test.EndTime</b>
    }
    Максимальный балл: <b>@Model.MaxBalls</b>
    Максимальное количество попыток: <b>@Model.Test.MaxAttempts</b>
    Был пройден пользователями платформы <b>@Model.TotalAttempts @WordHelp.Inflect(Model.TotalAttempts,"раз","раз","раза")</b>
</span>
@if (Model.Test.ImageUrl != null)
{
    <img class="img-fluid rounded" src="@Model.Test.ImageUrl">
}
<hr>
@if (Model.Test.UserId.Equals(userManager.GetUserId(User)))
{
    <a asp-controller="Test" asp-action="Results" asp-route-id="@Model.Test.Id" class="btn btn-success"><i class="bi bi-file-earmark-text"></i> Результаты</a>
    <a class="btn btn-warning" onclick="PreEditCheck(@Model.Test.Id);"><i class="bi bi-pencil"></i> Редактировать</a>
    @if (Model.Test.Opened)
    {
        <a id="Close-@Model.Test.Id" class="btn btn-warning" onclick="OpenToggle(@Model.Test.Id);"><i class="bi bi-door-closed"></i> Закрыть</a>
    }
    else
    {
        <a id="Open-@Model.Test.Id" class="btn btn-success" onclick="OpenToggle(@Model.Test.Id);"><i class="bi bi-door-open"></i> Открыть</a>
    }
    @if (Model.Test.Public)
    {
        <a id="Private-@Model.Test.Id" class="btn btn-warning" onclick="PublicToggle(@Model.Test.Id);"><i class="bi bi-door-closed"></i> Приватизировать</a>
    }
    else
    {
        <a id="Public-@Model.Test.Id" class="btn btn-success" onclick="PublicToggle(@Model.Test.Id);"><i class="bi bi-door-open"></i> Опубликовать</a>
    }
    <a class="btn btn-danger" onclick="Delete(@Model.Test.Id);"><i class="bi bi-trash"></i> Удалить</a>
    <hr>
}
@if (Model.UserAttempts.Count() > 0)
{
    <h5>Ваши попытки:</h5>
    @foreach (Attempt attempt in Model.UserAttempts)
    {
        @if (attempt.Active)
        {
            <div class="flex-wrapper">
                <div class="single-chart-sm">
                    <svg viewBox="0 0 36 36" class="circular-chart green">
                        <path class="circle-bg"
                  d="M18 2.0845
          a 15.9155 15.9155 0 0 1 0 31.831
          a 15.9155 15.9155 0 0 1 0 -31.831" />
                        <text x="18" y="20.35" class="percentage">0</text>
                    </svg>
                </div>
                <div class="center">
                    <h5>
                        <a asp-controller="Test" asp-action="Attempt" asp-route-id="@attempt.Id">АКТИВНАЯ попытка от @attempt.TimeStarted.ToString("dd.MM.yyyy HH:mm:ss")</a>
                    </h5>
                </div>
            </div>
        }
        else
        {
            int percent = (int)((attempt.Balls / Model.MaxBalls) * 100);
            <div class="flex-wrapper">
                <div class="single-chart-sm">
                    <svg viewBox="0 0 36 36" class="circular-chart green">
                        <path class="circle-bg"
                  d="M18 2.0845
                        a 15.9155 15.9155 0 0 1 0 31.831
                        a 15.9155 15.9155 0 0 1 0 -31.831" />
                        @if (percent > 0)
                        {
                            <path class="circle" stroke-dasharray="@percent, 100"
                  d="M18 2.0845
                            a 15.9155 15.9155 0 0 1 0 31.831
                            a 15.9155 15.9155 0 0 1 0 -31.831" />
                        }
                        <text x="18" y="20.35" class="percentage">@attempt.Balls</text>
                    </svg>
                </div>
                <div class="center">
                    <h5>
                        <a asp-controller="Test" asp-action="Attempt" asp-route-id="@attempt.Id">Попытка от @attempt.TimeStarted.ToString("dd.MM.yyyy HH:mm:ss")</a>
                    </h5>
                </div>
            </div>
        }
        <hr>
    }
}
@if (Model.Test.MaxAttempts <= Model.UserAttempts.Count())
{
    <h5>Вы исчерпали все попытки в этом тесте!</h5>
    return;
}
@if (!Model.Test.Opened)
{
    <h5>Тест закрыт. Пройти его станет возможно после открытия!</h5>
    return;
}
@if (Model.Test.StartTime != null && DateTime.Compare(Model.Test.StartTime.Value, DateTime.Now) > 0)
{
    <form method="post" id="form" hidden>
        <button id="main-button" class="btn btn-outline-primary" onclick="CheckActive(event, @Model.Test.Id);" type="submit"><i class="bi bi-check2"></i> Пройти</button>
    </form>
    <script src="~/js/CountDownScript.js"></script>
    <h5 id="timer-label">Тест откроется через <span id="timer" data-time="@Model.Test.StartTime.Value.ToString("yyyy-MM-ddTHH:mm:ss")"></span></h5>
    return;
}
@if (Model.Test.EndTime != null && DateTime.Compare(Model.Test.EndTime.Value, DateTime.Now) < 0)
{
    <h5>Тестирование окончено.</h5>
    return;
}
<form method="post">
    <button id="main-button" class="btn btn-outline-primary" onclick="CheckActive(event, @Model.Test.Id);" type="submit"><i class="bi bi-check2"></i> Пройти</button>
</form>

@section Scripts
    {
    <partial name="_AlertsPartial" />
    <script src="~/js/DeleteScript.js" asp-append-version="true"></script>
    <script src="~/js/OpenToggleScript.js" asp-append-version="true"></script>
    <script src="~/js/PublicToggleScript.js" asp-append-version="true"></script>
    <script src="~/js/ProcessErrorsScript.js" asp-append-version="true"></script>
    <script src="~/js/PreEditCheck.js" asp-append-version="true"></script>
    <script src="~/js/CheckActiveScript.js" asp-append-version="true"></script>
    <script src="~/js/StarScript.js" asp-append-version="true"></script>
}