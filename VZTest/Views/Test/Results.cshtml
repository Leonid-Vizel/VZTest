@using Microsoft.AspNetCore.Identity
@using VZTest.Models.Test
@inject SignInManager<IdentityUser> signInManager
@using VZTest.Models.Test.CorrectAnswers
@model AttemptModel
@{
    ViewData["Title"] = "Простотр попытки";
    int percent = 0;
    if (Model.Attempt != null)
    {
        percent = (int)((Model.Attempt.Balls / Model.Attempt.MaxBalls) * 100);
    }
}
<link rel="stylesheet" href="~/css/PercentCircle.css">
<h2><i class="bi bi-eye-fill"></i> Просмотр попытки</h2>
<hr>

@if (!signInManager.IsSignedIn(User))
{
    <h5>Войдите в свой аккаунт</h5>
    return;
}

@if (Model == null)
{
    <h5>Ошибка</h5>
    return;
}

@if (Model.Forbidden)
{
    <h5>Доступ ограничен</h5>
    return;
}

@if (Model.NotFound)
{
    <h5>Попытка не найдена</h5>
    return;
}

<h5>Тест: @Model.Test.Title</h5>
<h5>Попытка от @Model.Attempt.TimeStarted</h5>
<hr>
<svg viewBox="0 0 36 36" class="circular-chart green">
    <path class="circle-bg"
          d="M18 2.0845
          a 15.9155 15.9155 0 0 1 0 31.831
          a 15.9155 15.9155 0 0 1 0 -31.831" />
    <path class="circle"
          stroke-dasharray="@percent, 100"
          d="M18 2.0845
          a 15.9155 15.9155 0 0 1 0 31.831
          a 15.9155 15.9155 0 0 1 0 -31.831" />
    <text x="18" y="20.35" class="percentage">@Model.Attempt.Balls / @Model.Attempt.MaxBalls</text>
</svg>
<hr>
<div class="row container">
    @for (int i = 0; i < Model.Test.Questions.Count; i++)
    {
        Question question = Model.Test.Questions[i];
        <h3 class="mt-2">
            Вопрос #@(question.Number + 1)
            @if (Model.Attempt.Answers[i].Correct)
            {
                <span style="color: #50c878;">(@question.Balls @WordHelp.Inflect((int)question.Balls, "баллов", "балл", "балл"))</span>
            }
            else
            {
                <span style="color: #DC143C;">(0 баллов)</span>
            }
        </h3>
        <h6>
            <span class="text-muted">Задание: </span>
            @question.Title
        </h6>
        @switch (question.Type)
        {
            case QuestionType.Text:
                <textarea disabled>@Model.Attempt.Answers[i].TextAnswer</textarea>
                break;
            case QuestionType.Date:
                <input asp-for="Attempt.Answers[i].DateAnswer" type="date" class="form-control" disabled />
                break;
            case QuestionType.Int:
                <input asp-for="Attempt.Answers[i].IntAnswer" class="form-control" disabled />
                break;
            case QuestionType.Double:
                <input asp-for="Attempt.Answers[i].DoubleAnswer" class="form-control" disabled />
                break;
            case QuestionType.Radio:
                @foreach (Option option in question.Options)
                {
                    <div class="form-check">
                        <input asp-for="Attempt.Answers[i].RadioAnswer" class="form-check-input" type="radio" value="@option.Id" disabled>
                        <label class="form-check-label">@option.Title</label>
                    </div>
                }
                break;
            case QuestionType.Check:
                @foreach (Option option in question.Options)
                {
                    <div class="form-check">
                        <input asp-for="Attempt.Answers[i].CheckAnswer" class="form-check-input" type="checkbox" value="@option.Id" disabled>
                        <label class="form-check-label">@option.Title</label>
                    </div>
                }
                break;
        }
        @if (Model.Attempt.Answers[i].Correct)
        {
            <h6 style="color: #50c878;">Правильно!</h6>
        }
        else
        {
            <h6 style="color: #DC143C;">Неправильно!</h6>
        }
    }
</div>